
package mytodo;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

public class MainWindow extends javax.swing.JFrame {
    static MyTodo todo;
    static JFrame  frame;
    static JPanel activePanel = null;
   
    day sel,from,to;
    int selection = 0;  //0 Show all, 
                        //1 Show selected day,
                        //2 Show from a day to another,
                        //3 Show high priority remaining for today.

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        try {
            todo = new MyTodo((JFrame)this);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // Γεμίζει τον πίνακα των υποχρεώσεων
        DefaultTableModel tblmod =(DefaultTableModel) ObligationTable.getModel();
        int size = todo.getObsCount();
        System.out.println(size);
        for (int count = 0; count < size; count++) {
            tblmod.addRow(new Object[] { todo.getObTitle(count), todo.getDeadline(count) });
         }

        day today = new day();
        String ds = Integer.toString(today.getDate());
        String ms = Integer.toString(today.getMonth());
        String ys = Integer.toString(today.getYear());
        date.setText(ds);       month.setText(ms);       year.setText(ys);
        select_date.setText(ds);select_month.setText(ms);select_year.setText(ys);
        from_date.setText(ds);  from_month.setText(ms);  from_year.setText(ys);
        to_date.setText(ds);    to_month.setText(ms);    to_year.setText(ys);
        select_date1.setText(ds);select_month1.setText(ms);select_year1.setText(ys);
        hours.setText("23");
        minutes.setText("59");
        hours.setVisible(false);
        minutes.setVisible(false);
        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        title = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        date = new javax.swing.JTextField();
        month = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        ishipriority = new javax.swing.JCheckBox();
        hours = new javax.swing.JTextField();
        minutes = new javax.swing.JTextField();
        done = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        ObligationTable = new javax.swing.JTable();
        newObl = new javax.swing.JButton();
        SaveNew = new javax.swing.JButton();
        ShowAll = new javax.swing.JButton();
        ShowADay = new javax.swing.JButton();
        ShowFromTo = new javax.swing.JButton();
        hiPrioriyToday = new javax.swing.JButton();
        select_date = new javax.swing.JTextField();
        select_month = new javax.swing.JTextField();
        select_year = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        to_date = new javax.swing.JTextField();
        to_month = new javax.swing.JTextField();
        to_year = new javax.swing.JTextField();
        from_date = new javax.swing.JTextField();
        from_month = new javax.swing.JTextField();
        from_year = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        SaveChanges = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        searchTitle = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        select_date1 = new javax.swing.JTextField();
        select_month1 = new javax.swing.JTextField();
        select_year1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("My Todo List");
        setResizable(false);

        jLabel1.setText("Υποχρεώσεις");

        jLabel2.setText("Τίτλος");

        jLabel3.setText("Περιγραφή");

        jLabel4.setText("Ημερομηνία");

        jLabel5.setText("Ώρα");

        jLabel6.setText("Ωρα 0-23, λεπτά 0-59");

        jLabel7.setText("Μέρα  Μήνας ´Ετος");

        title.setNextFocusableComponent(description);

        description.setColumns(20);
        description.setRows(5);
        description.setNextFocusableComponent(date);
        jScrollPane2.setViewportView(description);

        date.setToolTipText("");
        date.setActionCommand("<Not Set>");
        date.setNextFocusableComponent(month);
        date.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateFocusLost(evt);
            }
        });

        month.setToolTipText("");
        month.setNextFocusableComponent(year);
        month.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                monthFocusLost(evt);
            }
        });

        year.setToolTipText("");
        year.setNextFocusableComponent(ishipriority);
        year.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                yearFocusLost(evt);
            }
        });

        ishipriority.setText("Υψηλής σπουδαιότητας");
        ishipriority.setNextFocusableComponent(hours);
        ishipriority.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ishipriorityActionPerformed(evt);
            }
        });

        hours.setNextFocusableComponent(minutes);
        hours.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                hoursFocusLost(evt);
            }
        });

        minutes.setToolTipText("");
        minutes.setNextFocusableComponent(done);
        minutes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                minutesFocusLost(evt);
            }
        });

        done.setText("Ολοκληρώθηκε");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });

        ObligationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Τίτλος", "Ημέρα"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ObligationTable.setColumnSelectionAllowed(true);
        ObligationTable.getTableHeader().setReorderingAllowed(false);
        ObligationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ObligationTableMouseClicked(evt);
            }
        });
        ObligationTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ObligationTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(ObligationTable);
        ObligationTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (ObligationTable.getColumnModel().getColumnCount() > 0) {
            ObligationTable.getColumnModel().getColumn(1).setMinWidth(20);
            ObligationTable.getColumnModel().getColumn(1).setPreferredWidth(50);
        }

        newObl.setText("Καθαρισμός στοιχείων");
        newObl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newOblActionPerformed(evt);
            }
        });

        SaveNew.setText("Καταχώριση νέας");
        SaveNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveNewActionPerformed(evt);
            }
        });

        ShowAll.setText("Προβολή όλων");
        ShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowAllActionPerformed(evt);
            }
        });

        ShowADay.setText("Προβολή για την Ημέρα");
        ShowADay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowADayActionPerformed(evt);
            }
        });

        ShowFromTo.setText("Προβολή για διάστημα");
        ShowFromTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowFromToActionPerformed(evt);
            }
        });

        hiPrioriyToday.setText("Προβολή υψηλής σπουδαιότητας για το υπολοιπο της ημέρας");
        hiPrioriyToday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hiPrioriyTodayActionPerformed(evt);
            }
        });

        select_date.setToolTipText("");
        select_date.setActionCommand("<Not Set>");
        select_date.setNextFocusableComponent(select_month);
        select_date.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                select_dateFocusLost(evt);
            }
        });

        select_month.setToolTipText("");
        select_month.setNextFocusableComponent(select_year);
        select_month.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                select_monthFocusLost(evt);
            }
        });

        select_year.setToolTipText("");
        select_year.setNextFocusableComponent(from_date);
        select_year.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                select_yearFocusLost(evt);
            }
        });

        jLabel8.setText("Ημέρα");

        to_date.setToolTipText("");
        to_date.setActionCommand("<Not Set>");
        to_date.setNextFocusableComponent(to_month);
        to_date.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                to_dateFocusLost(evt);
            }
        });

        to_month.setToolTipText("");
        to_month.setNextFocusableComponent(to_year);
        to_month.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                to_monthFocusLost(evt);
            }
        });

        to_year.setToolTipText("");
        to_year.setNextFocusableComponent(searchTitle);
        to_year.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                to_yearFocusLost(evt);
            }
        });

        from_date.setToolTipText("");
        from_date.setActionCommand("<Not Set>");
        from_date.setNextFocusableComponent(from_month);
        from_date.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                from_dateFocusLost(evt);
            }
        });

        from_month.setToolTipText("");
        from_month.setNextFocusableComponent(from_year);
        from_month.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                from_monthFocusLost(evt);
            }
        });

        from_year.setToolTipText("");
        from_year.setNextFocusableComponent(to_date);
        from_year.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                from_yearFocusLost(evt);
            }
        });

        jLabel9.setText("Διάστημα από:");

        jLabel10.setText("έως:");

        SaveChanges.setText("Τροποποίηση επιλεγμένης");
        SaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveChangesActionPerformed(evt);
            }
        });

        jButton1.setText("Εύρεση συγκεκριμένης ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        searchTitle.setNextFocusableComponent(select_date1);
        searchTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTitleActionPerformed(evt);
            }
        });

        jLabel11.setText("Ημέρα");

        select_date1.setToolTipText("");
        select_date1.setActionCommand("<Not Set>");
        select_date1.setNextFocusableComponent(select_month1);
        select_date1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                select_date1FocusLost(evt);
            }
        });

        select_month1.setToolTipText("");
        select_month1.setNextFocusableComponent(select_year1);
        select_month1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                select_month1FocusLost(evt);
            }
        });

        select_year1.setToolTipText("");
        select_year1.setNextFocusableComponent(title);
        select_year1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                select_year1FocusLost(evt);
            }
        });

        jLabel12.setText("Τίτλος");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(107, 107, 107))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jLabel2)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel5))
                                                .addGap(4, 4, 4)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(ishipriority)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(22, 22, 22)
                                                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(hours, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(minutes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel7)
                                                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(done)))
                                    .addComponent(SaveNew, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SaveChanges))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(newObl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ShowAll))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(select_date, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(select_month, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(select_year, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ShowADay))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(3, 3, 3)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(searchTitle)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(select_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(select_month1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(select_year1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton1))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(hiPrioriyToday, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(from_date, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(from_month, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(22, 22, 22)
                                            .addComponent(from_year, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(jLabel10)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(to_date, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(to_month, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(22, 22, 22)
                                            .addComponent(to_year, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(ShowFromTo))))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ishipriority)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(hours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(done)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SaveNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SaveChanges)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newObl)
                    .addComponent(ShowAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ShowADay)
                    .addComponent(select_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(select_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(select_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ShowFromTo)
                    .addComponent(to_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(to_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(to_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(from_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(from_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(from_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hiPrioriyToday)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(select_year1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(select_month1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(select_date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(searchTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(0, 14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ishipriorityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ishipriorityActionPerformed
        if (ishipriority.isSelected()){
            hours.setVisible(true);
            minutes.setVisible(true);
            jLabel5.setVisible(true);
            jLabel6.setVisible(true);
        }else{
            hours.setVisible(false);
            minutes.setVisible(false);
            jLabel5.setVisible(false);
            jLabel6.setVisible(false);
        }
        repaint();
    }//GEN-LAST:event_ishipriorityActionPerformed

    private void newOblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newOblActionPerformed
        ishipriority.setSelected(false);
        title.setText("");
        description.setText("");
        day today = new day();
        date.setText(Integer.toString(today.getDate()));
        month.setText(Integer.toString(today.getMonth()));
        year.setText(Integer.toString(today.getYear()));
        
    }//GEN-LAST:event_newOblActionPerformed

    private void SaveNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveNewActionPerformed
        if (!day.isDay(Integer.parseInt(date.getText()),Integer.parseInt(month.getText()),Integer.parseInt(year.getText()))){
              JOptionPane.showMessageDialog(this,"Λάθος ημερομηνία","Αποτυχία Εισαγωγής!",JOptionPane.WARNING_MESSAGE);
              return;
        }
        day d = new day(Integer.parseInt(date.getText()),
                Integer.parseInt(month.getText()),
                Integer.parseInt(year.getText()));
        if (ishipriority.isSelected()){
            int h = Integer.parseInt(hours.getText());
            int m = Integer.parseInt(minutes.getText());
            if (h<0 || h>23 || m<0 || m>59){
                JOptionPane.showMessageDialog(this,"Λάθος ώρας λήξης","Αποτυχία Εισαγωγής!",JOptionPane.WARNING_MESSAGE);
            }
            if(!todo.AddObbligation(title.getText(), description.getText(), d, done.isSelected(), h,m)){            
                JOptionPane.showMessageDialog(this,"Υπάρχει ήδη. Δεν μπορεί να γίνει εισαγωγή!","Αποτυχία Εισαγωγής!",JOptionPane.WARNING_MESSAGE);
            }
            title.getText();
        }else {
            if(!todo.AddObbligation(title.getText(), description.getText(), d, done.isSelected())){            
                JOptionPane.showMessageDialog(this,"Υπάρχει ήδη. Δεν μπορεί να γίνει εισαγωγή!","Αποτυχία Εισαγωγής!",JOptionPane.WARNING_MESSAGE);
            }
        }
        refreshTableData();    
    }//GEN-LAST:event_SaveNewActionPerformed

    private void ObligationTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ObligationTableMouseClicked
      ShowSelectedObligation(ObligationTable.getSelectedRow());
    }//GEN-LAST:event_ObligationTableMouseClicked

    private void ObligationTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ObligationTableKeyPressed
        ShowSelectedObligation(ObligationTable.getSelectedRow());
    }//GEN-LAST:event_ObligationTableKeyPressed
  
    private void dateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateFocusLost
        isint(date, "Πρέπει να δώσετε αριθμό (1-31)");
    }//GEN-LAST:event_dateFocusLost

    private void monthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό (1-12)");
    }//GEN-LAST:event_monthFocusLost

    private void yearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό");
    }//GEN-LAST:event_yearFocusLost

    private void hoursFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hoursFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό (0-23)");
    }//GEN-LAST:event_hoursFocusLost

    private void minutesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_minutesFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό (0-59)");
    }//GEN-LAST:event_minutesFocusLost

    private void select_dateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_select_dateFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό (1-31)");
    }//GEN-LAST:event_select_dateFocusLost

    private void select_monthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_select_monthFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό (1-12)");
    }//GEN-LAST:event_select_monthFocusLost

    private void select_yearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_select_yearFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό ");
    }//GEN-LAST:event_select_yearFocusLost

    private void from_dateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_from_dateFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό (1-31)");
    }//GEN-LAST:event_from_dateFocusLost

    private void from_monthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_from_monthFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό (1-12)");
    }//GEN-LAST:event_from_monthFocusLost

    private void from_yearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_from_yearFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό");
    }//GEN-LAST:event_from_yearFocusLost

    private void to_dateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_to_dateFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό (1-31)");
    }//GEN-LAST:event_to_dateFocusLost

    private void to_monthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_to_monthFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό (1-12)");
    }//GEN-LAST:event_to_monthFocusLost

    private void to_yearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_to_yearFocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό ");
    }//GEN-LAST:event_to_yearFocusLost

    private void ShowADayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowADayActionPerformed
        if (!day.isDay(Integer.parseInt(select_date.getText()),Integer.parseInt(select_month.getText()),Integer.parseInt(select_year.getText()))){
                 JOptionPane.showMessageDialog(this,"Λάθος ημερομηνία","Αποτυχία Περιορισμού!",JOptionPane.WARNING_MESSAGE);
                 return;
           }
        selection = 1; 
        sel = new day(Integer.parseInt(select_date.getText()),
                      Integer.parseInt(select_month.getText()),
                      Integer.parseInt(select_year.getText()));
        refreshTableData();
    }//GEN-LAST:event_ShowADayActionPerformed

    private void ShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAllActionPerformed
        selection = 0;
        refreshTableData();
    }//GEN-LAST:event_ShowAllActionPerformed

    private void ShowFromToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowFromToActionPerformed
        if (!day.isDay(Integer.parseInt(from_date.getText()),Integer.parseInt(from_month.getText()),Integer.parseInt(from_year.getText()))){
                 JOptionPane.showMessageDialog(this,"Λάθος ημερομηνία έναρξης","Αποτυχία Περιορισμού!",JOptionPane.WARNING_MESSAGE);
                 return;
           }
        if (!day.isDay(Integer.parseInt(to_date.getText()),Integer.parseInt(to_month.getText()),Integer.parseInt(to_year.getText()))){
                 JOptionPane.showMessageDialog(this,"Λάθος ημερομηνία λήξης","Αποτυχία Περιορισμού!",JOptionPane.WARNING_MESSAGE);
                 return;
           }
         selection = 2;
         from = new day(Integer.parseInt(from_date.getText()),
                      Integer.parseInt(from_month.getText()),
                      Integer.parseInt(from_year.getText()));
         to = new day(Integer.parseInt(to_date.getText()),
                      Integer.parseInt(to_month.getText()),
                      Integer.parseInt(to_year.getText()));
         refreshTableData();
    }//GEN-LAST:event_ShowFromToActionPerformed

    private void SaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveChangesActionPerformed
      if (!day.isDay(Integer.parseInt(date.getText()),Integer.parseInt(month.getText()),Integer.parseInt(year.getText()))){
              JOptionPane.showMessageDialog(this,"Λάθος ημερομηνία","Αποτυχία Τροποποίησης!",JOptionPane.WARNING_MESSAGE);
              return;
        }
        day d = new day(Integer.parseInt(date.getText()),
                Integer.parseInt(month.getText()),
                Integer.parseInt(year.getText()));
        if (ishipriority.isSelected()){
            int h = Integer.parseInt(hours.getText());
            int m = Integer.parseInt(minutes.getText());
            if (h<0 || h>23 || m<0 || m>59){
                JOptionPane.showMessageDialog(this,"Λάθος ώρας λήξης","ΑΑποτυχία Τροποποίησης!",JOptionPane.WARNING_MESSAGE);
            }
            if(!todo.ChangeObligation(title.getText(), description.getText(), d, done.isSelected(), h,m)){            
                JOptionPane.showMessageDialog(this,"Υπάρχει ήδη. Δεν μπορεί να γίνει εισαγωγή!","Αποτυχία Τροποποίησης!",JOptionPane.WARNING_MESSAGE);
            }
            title.getText();
        }else {
            if(!todo.ChangeObligation(title.getText(), description.getText(), d, done.isSelected())){            
                JOptionPane.showMessageDialog(this,"Υπάρχει ήδη. Δεν μπορεί να γίνει εισαγωγή!","Αποτυχία Τροποποίησης!",JOptionPane.WARNING_MESSAGE);
            }
        }
        refreshTableData();    
    }//GEN-LAST:event_SaveChangesActionPerformed

    private void select_date1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_select_date1FocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό (1-31)");
    }//GEN-LAST:event_select_date1FocusLost

    private void select_month1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_select_month1FocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό (1-12)");
    }//GEN-LAST:event_select_month1FocusLost

    private void select_year1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_select_year1FocusLost
        isint((JTextField)evt.getComponent(), "Πρέπει να δώσετε αριθμό");
    }//GEN-LAST:event_select_year1FocusLost

    private void searchTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTitleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!day.isDay(Integer.parseInt(select_date1.getText()),Integer.parseInt(select_month1.getText()),Integer.parseInt(select_year1.getText()))){
                 JOptionPane.showMessageDialog(this,"Λάθος ημερομηνία","Αδυναμία αναζήτησης!",JOptionPane.WARNING_MESSAGE);
                 return;
           }
        
        day d = new day(Integer.parseInt(select_date1.getText()),
                      Integer.parseInt(select_month1.getText()),
                      Integer.parseInt(select_year1.getText()));
        
        obligation ob = todo.ObligationExists(searchTitle.getText(), d);
        
        if(ob !=null){
            todo.activeobligation = ob;
            title.setText(ob.getTitle());
            description.setText(ob.getDesc());
            date.setText(Integer.toString(d.getDate()));
            month.setText(Integer.toString(d.getMonth()));
            year.setText(Integer.toString(d.getYear()));
            done.setSelected(ob.done);
            if (ob.highpriority()){
                ishipriority.setSelected(true);
                ishipriorityActionPerformed(null);
                hours.setText(Integer.toString(((highpriorityob)ob).hour));
                minutes.setText(Integer.toString(((highpriorityob)ob).minute));
            }else{
                ishipriority.setSelected(false);
                ishipriorityActionPerformed(null);
            } 
            ShowAllActionPerformed(null);
            ObligationTable.selectAll();
        }else{
            JOptionPane.showMessageDialog(this,"Δεν υπάρχει εκκρεμότητα με αυτό τον τίτλο τη συγκεκριμένη ημερονηνία.","Αδυναμία Ευρεσης!",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void hiPrioriyTodayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hiPrioriyTodayActionPerformed
        selection = 3;
        refreshTableData();
    }//GEN-LAST:event_hiPrioriyTodayActionPerformed

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frame = new MainWindow();
                frame.setVisible(true);
            }
        });
    }


    /**
     *  Ελέγχει αν ένα πεδίο κειμένου περιέχει ακέραιο αριθμό. Εμφανίζει
     * κατάλληλο μηνυμα εάν δεν είναι.
     * @param fld Το πεδιο κειμένου που θα ελεγθεί
     * @param ErrorMessge Το μήνυμα σε περίπτωση σφάλματος
     * @return true εαν είναι, false διαφορετικά.
     */
    private boolean isint(JTextField fld, String ErrorMessge){
        try {
            int tmp = Integer.parseInt(fld.getText());
            return true;
        } catch (NumberFormatException e ) {
            JOptionPane.showMessageDialog(frame,ErrorMessge,"Ακέραια τιμή", JOptionPane.WARNING_MESSAGE);
            fld.grabFocus();
            return false;
        }
    }
    
    /**
     * Ανανεώνει τα στοιχεία του πίνακα που εμφανίζεται.
     * Εφαρμόζει τους διάφορους περιορισμούς όπως καθορίζονται από το χρήστη.
     */
    private void refreshTableData(){
        DefaultTableModel tblmod =(DefaultTableModel) ObligationTable.getModel();
        tblmod.setRowCount(0);
        int size = todo.getObsCount();
        for (int count = 0; count < size; count++) {
            switch (selection){
                case 0:
                    tblmod.addRow(new Object[] { todo.getObTitle(count), todo.getDeadline(count) });
                    break;
                case 1:
                    day sd = new day(todo.getDeadline(count));
                    //System.out.println(sd.toString());
                    //System.out.println(sel.toString());
                    if(sd.equals(sel)){
                        tblmod.addRow(new Object[] { todo.getObTitle(count), todo.getDeadline(count) });
                    }
                    break;
                case 2:
                    day bd = new day(todo.getDeadline(count));
                    if (bd.between(from, to)){
                        tblmod.addRow(new Object[] { todo.getObTitle(count), todo.getDeadline(count) });
                    }
                    break;
                case 3:
                    day today = new day();
                    obligation ob = todo.obs.get(count);
                    if(ob.highpriority() && !ob.done && ob.getDeadline().equals(today.toString()) ){
                        int h = ((highpriorityob)ob).hour;
                        int m = ((highpriorityob)ob).minute;
                        int ch = today.aday.get(Calendar.HOUR_OF_DAY);
                        int cm = today.aday.get(Calendar.MINUTE);
                        if (h>ch || h==ch && m>cm){
                            tblmod.addRow(new Object[] { todo.getObTitle(count), todo.getDeadline(count) });
                        }
                    }
                    break;
            }
        }
    }
    
    /**
     * Εμφανίζει τα στοιχεία της επιλεγμένης υποχρέωσης
     * @param row Η γραμμή που έχει επιλεγεί από τον πίνακα
     */        
    private void ShowSelectedObligation(int row){
        String tit = ObligationTable.getValueAt(row, 0).toString();
        String daystr = ObligationTable.getValueAt(row, 1).toString();
        day d = new day(daystr);
        obligation ob = todo.ObligationExists(tit, d);
        todo.activeobligation = ob;
        title.setText(tit);
        description.setText(ob.getDesc());
        date.setText(Integer.toString(d.getDate()));
        month.setText(Integer.toString(d.getMonth()));
        year.setText(Integer.toString(d.getYear()));
        done.setSelected(ob.done);
        if (ob.highpriority()){
            ishipriority.setSelected(true);
            ishipriorityActionPerformed(null);
            hours.setText(Integer.toString(((highpriorityob)ob).hour));
            minutes.setText(Integer.toString(((highpriorityob)ob).minute));
        }else{
            ishipriority.setSelected(false);
            ishipriorityActionPerformed(null);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ObligationTable;
    private javax.swing.JButton SaveChanges;
    private javax.swing.JButton SaveNew;
    private javax.swing.JButton ShowADay;
    private javax.swing.JButton ShowAll;
    private javax.swing.JButton ShowFromTo;
    private javax.swing.JTextField date;
    private javax.swing.JTextArea description;
    private javax.swing.JCheckBox done;
    private javax.swing.JTextField from_date;
    private javax.swing.JTextField from_month;
    private javax.swing.JTextField from_year;
    private javax.swing.JButton hiPrioriyToday;
    private javax.swing.JTextField hours;
    private javax.swing.JCheckBox ishipriority;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField minutes;
    private javax.swing.JTextField month;
    private javax.swing.JButton newObl;
    private javax.swing.JTextField searchTitle;
    private javax.swing.JTextField select_date;
    private javax.swing.JTextField select_date1;
    private javax.swing.JTextField select_month;
    private javax.swing.JTextField select_month1;
    private javax.swing.JTextField select_year;
    private javax.swing.JTextField select_year1;
    private javax.swing.JTextField title;
    private javax.swing.JTextField to_date;
    private javax.swing.JTextField to_month;
    private javax.swing.JTextField to_year;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
